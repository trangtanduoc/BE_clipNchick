// <auto-generated />
using System;
using ClipNchic.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClipNchic.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClipNchic.DataAccess.Models.Base", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("color")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("modelId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("price")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("id");

                    b.HasIndex("modelId");

                    b.ToTable("Base");
                });

            modelBuilder.Entity("ClipNchic.DataAccess.Models.BlindBox", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("collectId")
                        .HasColumnType("int");

                    b.Property<string>("descript")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("stock")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("collectId");

                    b.ToTable("BlindBox");
                });

            modelBuilder.Entity("ClipNchic.DataAccess.Models.Charm", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("modelId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("price")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("id");

                    b.HasIndex("modelId");

                    b.ToTable("Charm");
                });

            modelBuilder.Entity("ClipNchic.DataAccess.Models.CharmProduct", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("charmId")
                        .HasColumnType("int");

                    b.Property<int?>("productId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("charmId");

                    b.HasIndex("productId");

                    b.ToTable("CharmProduct");
                });

            modelBuilder.Entity("ClipNchic.DataAccess.Models.Collection", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("descript")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("id");

                    b.ToTable("Collection");
                });

            modelBuilder.Entity("ClipNchic.DataAccess.Models.Image", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("baseId")
                        .HasColumnType("int");

                    b.Property<int?>("blindBoxId")
                        .HasColumnType("int");

                    b.Property<int?>("charmId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("productId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("baseId")
                        .IsUnique()
                        .HasFilter("[baseId] IS NOT NULL");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("ClipNchic.DataAccess.Models.Model", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("id");

                    b.ToTable("Model");
                });

            modelBuilder.Entity("ClipNchic.DataAccess.Models.Order", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("payMethod")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("payPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("shipPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("totalPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("userId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("ClipNchic.DataAccess.Models.OrderDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("blindBoxId")
                        .HasColumnType("int");

                    b.Property<int?>("orderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("productId")
                        .HasColumnType("int");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("blindBoxId");

                    b.HasIndex("orderId");

                    b.HasIndex("productId");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("ClipNchic.DataAccess.Models.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("baseId")
                        .HasColumnType("int");

                    b.Property<int?>("collectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("descript")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("modelId")
                        .HasColumnType("int");

                    b.Property<decimal?>("price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("stock")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("baseId");

                    b.HasIndex("collectId");

                    b.HasIndex("modelId");

                    b.HasIndex("userId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ClipNchic.DataAccess.Models.Ship", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("price")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("id");

                    b.ToTable("Ship");
                });

            modelBuilder.Entity("ClipNchic.DataAccess.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ClipNchic.DataAccess.Models.Voucher", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<decimal?>("discount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("end")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("start")
                        .HasColumnType("datetime2");

                    b.Property<int?>("stock")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Voucher");
                });

            modelBuilder.Entity("ClipNchic.DataAccess.Models.Base", b =>
                {
                    b.HasOne("ClipNchic.DataAccess.Models.Model", "Model")
                        .WithMany("Bases")
                        .HasForeignKey("modelId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Model");
                });

            modelBuilder.Entity("ClipNchic.DataAccess.Models.BlindBox", b =>
                {
                    b.HasOne("ClipNchic.DataAccess.Models.Collection", "Collection")
                        .WithMany("BlindBoxes")
                        .HasForeignKey("collectId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Collection");
                });

            modelBuilder.Entity("ClipNchic.DataAccess.Models.Charm", b =>
                {
                    b.HasOne("ClipNchic.DataAccess.Models.Model", "Model")
                        .WithMany("Charms")
                        .HasForeignKey("modelId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Model");
                });

            modelBuilder.Entity("ClipNchic.DataAccess.Models.CharmProduct", b =>
                {
                    b.HasOne("ClipNchic.DataAccess.Models.Charm", "Charm")
                        .WithMany("CharmProducts")
                        .HasForeignKey("charmId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ClipNchic.DataAccess.Models.Product", "Product")
                        .WithMany("CharmProducts")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Charm");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ClipNchic.DataAccess.Models.Image", b =>
                {
                    b.HasOne("ClipNchic.DataAccess.Models.Base", null)
                        .WithOne("Image")
                        .HasForeignKey("ClipNchic.DataAccess.Models.Image", "baseId");
                });

            modelBuilder.Entity("ClipNchic.DataAccess.Models.Order", b =>
                {
                    b.HasOne("ClipNchic.DataAccess.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("User");
                });

            modelBuilder.Entity("ClipNchic.DataAccess.Models.OrderDetail", b =>
                {
                    b.HasOne("ClipNchic.DataAccess.Models.BlindBox", "BlindBox")
                        .WithMany("OrderDetails")
                        .HasForeignKey("blindBoxId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ClipNchic.DataAccess.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("orderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ClipNchic.DataAccess.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("BlindBox");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ClipNchic.DataAccess.Models.Product", b =>
                {
                    b.HasOne("ClipNchic.DataAccess.Models.Base", "Base")
                        .WithMany("Products")
                        .HasForeignKey("baseId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ClipNchic.DataAccess.Models.Collection", "Collection")
                        .WithMany("Products")
                        .HasForeignKey("collectId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ClipNchic.DataAccess.Models.Model", "Model")
                        .WithMany("Products")
                        .HasForeignKey("modelId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ClipNchic.DataAccess.Models.User", "User")
                        .WithMany("Products")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Base");

                    b.Navigation("Collection");

                    b.Navigation("Model");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ClipNchic.DataAccess.Models.Base", b =>
                {
                    b.Navigation("Image");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("ClipNchic.DataAccess.Models.BlindBox", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("ClipNchic.DataAccess.Models.Charm", b =>
                {
                    b.Navigation("CharmProducts");
                });

            modelBuilder.Entity("ClipNchic.DataAccess.Models.Collection", b =>
                {
                    b.Navigation("BlindBoxes");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("ClipNchic.DataAccess.Models.Model", b =>
                {
                    b.Navigation("Bases");

                    b.Navigation("Charms");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("ClipNchic.DataAccess.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("ClipNchic.DataAccess.Models.Product", b =>
                {
                    b.Navigation("CharmProducts");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("ClipNchic.DataAccess.Models.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
